<rss version="2.0">
    <channel>    
        <title>Влад Костянецкий</title>
        <description>Привет! Меня зовут Влад, я — разработчик приложений для бизнеса.</description>
        <language>ru</language>
        <link>https://kostyanetsky.ru</link>
        <lastBuildDate>Sat, 12 Sep 2020 17:23:09 +0700</lastBuildDate>
        
        <item>
            <title>Про Single Sign-On</title>
            <link>https://kostyanetsky.ru/notes/single-sign-on</link>
            <guid isPermaLink="false">note-single-sign-on</guid>
            <pubDate>Sat, 12 Sep 2020 17:23:09 +0700</pubDate>
            <description><p><a href="https://twitter.com/EpicGames/status/1303716447831707649" target="_blank"><img alt="Твит" src="https://kostyanetsky.ru/notes/single-sign-on/snap-tweet-EpicGames-1303716447831707649.png"/></a></p>
<p>Этот эпизод <s>схватки двух йокодзун</s> конфликта между Apple и Epic Games, безотносительно всего прочего — отличное напоминание, что Single Sign-On в интернете использовать нельзя: нигде, никогда, ни на каких сервисах. Неизвестно, какие ещё гиганты внезапно сойдутся на кулачках или какой сайт забанит тебя без всякой внятной причины. Because screw you, dude, that's why.</p>
<p>В кейсе из твита выше пользователи, возможно, отделаются малой кровью, а вот если вашу учетку заблокирует что-то вроде Google — ситуация вполне может оказаться критической: куча сервисов, на которые вы ходили через гугл, резко превратятся в тыкву.</p>
<p>Решений, по удобству ничем не уступающих Single Sign-On, полным-полно. Менеджеры паролей, разнообразные расширения для браузеров, «железные» ключи — да что угодно будет лучше, чем проприетарные сервисы с закрытым кодом, на которые вы не имеете никакого влияния.</p></description>
        </item>
        
        <item>
            <title>Хороший день</title>
            <link>https://kostyanetsky.ru/notes/rapunzel</link>
            <guid isPermaLink="false">note-rapunzel</guid>
            <pubDate>Tue, 09 Jul 2019 10:15:16 +0700</pubDate>
            <description><p><a href="https://twitter.com/IZRART/status/1146234848362713088" target="_blank"><img alt="Твит" src="https://kostyanetsky.ru/notes/rapunzel/snap-tweet-IZRART-1146234848362713088.png"/></a></p>
<blockquote>
<p>Дорогой дневник! Сегодня мне заплатили, чтобы я нарисовал думгая, который учит Рапунцель из диснеевской «Запутанной истории» стрельбе из тяжелой штурмовой винтовки. Сегодня был хороший день!</p>
<p><em>― izra</em></p>
</blockquote>
<p>Обожаю художников. Особенные люди :-)</p>
<p>(а также на рисунке я, обучающий дочку, как рашить зилотами в Starcraft 2)</p></description>
        </item>
        
        <item>
            <title>Ссылка нового объекта</title>
            <link>https://kostyanetsky.ru/notes/set-new-object-ref</link>
            <guid isPermaLink="false">note-set-new-object-ref</guid>
            <pubDate>Thu, 29 Nov 2018 19:22:56 +0700</pubDate>
            <description><p>Уникальный идентификатор — удобный критерий при сопоставлении объектов в разных конфигурациях. Например, когда нужно передавать инвойсы из одной базы в другую. Как второй базе понять, загружался полученный инвойс или нет? Первое, что приходит в голову — просто выполнить поиск объекта по его UUID:</p>
<pre><code>ИнвойсЗагружен = Документы.Инвойс.ПолучитьСсылку(UUID).Пустая();
</code></pre>
<p>Однако иногда уникальный идентификатор используют для связи объектов в одной конфигурации. Например, если условия задачи мешают добавить обычный ссылочный реквизит и мы не можем в документе А прямо сослаться на документ Б. Или, скажем, если мы создаем элемент справочника на основании документа и хотим иметь между ними прямую связь — присваивая элементу справочника ссылку, полученную по уникальному идентификатору документа. Платформа гарантирует уникальность идентификатора в пределах таблицы, так что такие трюки вполне безопасны.</p>
<p>Я это к чему. Метод УстановитьСсылкуНового() в коде нужно использовать с осторожностью! Проверяйте, что ссылка ещё не установлена до выполнения вашего кода:</p>
<pre><code>СсылкаЗадана = ПолучитьСсылкуНового().Пустая();
</code></pre>
<p>Если ссылка задана, то это надо как-то обработать — либо не заменять её вашей (если логика задачи позволяет), либо создать исключение. Иначе может возникнуть нарушение связности данных, которое будет непросто расследовать — да и вообще заметить.</p>
<p>Ну и, конечно, эта штука работает в обе стороны — я имею в виду, что установленную вами ссылку тоже может потереть какой-нибудь посторонний код (например, обработчик события объекта или подписка на него). Это надежно решается только тестированием.</p></description>
        </item>
        
        <item>
            <title>Об идеальном балансе</title>
            <link>https://kostyanetsky.ru/notes/perfectly-balanced</link>
            <guid isPermaLink="false">note-perfectly-balanced</guid>
            <pubDate>Wed, 20 May 2020 06:48:19 +0700</pubDate>
            <description><p>Хочу поделиться парой классных текстов о современном софте. Они не особенно свежие (первый-то уж точно), но наверняка ведь кто-то пропустил:</p>
<ul>
<li><a href="https://tonsky.me/blog/disenchantment/ru/" target="_blank">Моё разочарование в софте</a> Никиты Тонского</li>
<li><a href="https://habr.com/ru/company/jugru/blog/493178/" target="_blank">В софте всё восхитительно, но все недовольны</a> Евгения Трифонова</li>
</ul>
<p>К чему я это вспомнил? На прошлой неделе участвовал в хакатоне среди программистов нашей компании. Узнал кучу клевых штук, а по итогам даже занял первое место (вместе с ещё двумя участниками, у которых получились очень похожие решения).</p>
<p>(если вы — тоже сотрудник «Первого БИТа», то <a href="https://newportal.1cbit.ru/news/3066979/" target="_blank">итоги</a> хакатона лежат на портале; там же — <a href="https://newportal.1cbit.ru/news/3066980/" target="_blank">отзыв</a> другого победителя, Димы Лещенко)</p>
<p>В процессе нужно было развернуть и настроить целую гору софта: EDT, RabbitMQ, Docker, GitLab, JIRA, SonarQube и ещё вагон инструментов поменьше и попроще. Ладно, к RabbitMQ у меня претензий нет: легкий и быстрый, но вот остальное… Про хороший аппетит EDT я знал и раньше, а вот прожорливость GitLab и JIRA по-настоящему удивила.</p>
<p>Да, в моём случае всё запускалось в докере; да, конфигурация не была оптимальной (например, было развернуто несколько серверов PostgreSQL вместо одного); да, докер был для Windows, а его реализация под эту платформу — тема для едких шуток у всех сисадминов, с которыми я знаком. Но потратить 12 гигабайт ОЗУ прямо со старта?! Про процессор вообще молчу — нагрузка была такая, будто компьютер просчитывал ядерный взрыв в реальном времени.</p>
<p>Короче, лучшей иллюстрации к тезисам Никиты подобрать трудно: софт выше слопал море ресурсов и невозмутимо попросил ещё, даже не приступив к какой-то понятной задаче. Впрочем, в то же время это отличная иллюстрация к тексту Евгения: я, на секундочку, одной-единственной командой развернул несколько операционных систем со сложными серверами внутри. И потратил на это несоизмеримо меньше времени чем, скажем, пришлось бы потратить несколько лет назад.</p>
<p>У меня нет ответа. Думаю, ни у кого нет. Это такой вечный холивар внутри профессии: какую сторону не займи, на деле все равно балансируешь между двумя крайностями — с одной стороны, надо писать хороший, быстрый код, с другой — надо не свалиться в преждевременную оптимизацию. Первое в итоге дает чистое удовольствие от хорошо сделанной работы: вспоминаешь, что ты, черт побери, неплох! Второе — просто позволяет не нажить бед с башкой в поисках идеального алгоритма сортировки пузырьком :-)</p></description>
        </item>
        
        <item>
            <title>Старый добрый DATETIME</title>
            <link>https://kostyanetsky.ru/notes/old-but-gold</link>
            <guid isPermaLink="false">note-old-but-gold</guid>
            <pubDate>Wed, 11 Nov 2020 17:00:50 +0700</pubDate>
            <description><p>Порылся в сети по поводу типов дат в MS SQL Server и в целом вопроса «почему 1С до сих пор носится со своим смещением» больше не имею. Люди пишут о целой пачке проблем с DATETIME2:</p>
<ol>
<li>Недоступна базовая математика. Без дополнительных финтов ушами не выйдет посчитать разницу между двумя датами, прибавить к дате день и так далее.</li>
<li>Стандартные функции по-прежнему возвращают старый добрый DATETIME (например, DATEADD). Если данные хранятся в DATETIME2 — потребуется конвертация.</li>
<li>Поля с этим типом <a href="https://sqlperformance.com/2016/04/sql-performance/surprises-dateadd" target="_blank">неважно</a> индексируются, так как каждое значение DATETIME2 хранится задом наперед (сначала время, потом дата). В итоге СУБД промахивается с оценкой количества строк, которое может вернуть запрос, и строит для него неэффективный план выполнения.</li>
</ol>
<p>Подробнее о всем этом можно прочитать на <a href="https://towardsdatascience.com/datetime2-why-you-should-not-use-it-70e50ae2bab9" target="_blank">Towards Data Science</a> или, например, на <a href="https://www.sqlservercentral.com/forums/topic/why-do-some-dbas-avoid-datetime2" target="_blank">SQL Server Central</a>.</p></description>
        </item>
        
        <item>
            <title>Идеальное произношение</title>
            <link>https://kostyanetsky.ru/notes/ideal-pronunciation</link>
            <guid isPermaLink="false">note-ideal-pronunciation</guid>
            <pubDate>Mon, 15 Oct 2018 06:25:01 +0700</pubDate>
            <description><p><a href="https://twitter.com/vanswan/status/1051001827104178177" target="_blank"><img alt="Твит" src="https://kostyanetsky.ru/notes/ideal-pronunciation/snap-tweet-vanswan-1051001827104178177.png"/></a></p>
<p>Примерно то же самое я услышал несколько лет назад от инженера Bloomberg'а — мы тогда писали для заказчика программу, автоматически следящую за курсами акций, и столкнулись с кучей проблем (для работы с финансовыми инструментами Bloomberg дает мощный, но довольно сложный API).</p>
<p>В конце концов дело дошло до диалога с техподдержкой, и после обмена несколькими сообщениями коллега предложил пообщаться голосом. Я здорово смутился и заметил, что, мол, так-то можно, но my English isn't fluent enough. На это собеседник лишь пожал плечами: мол, мы привыкли — английский используется повсеместно, и обратная сторона медали в том, что его везде крутят на свой лад. Так что правильное ударение — последнее, что его будет волновать, лишь бы была понятна мысль.</p></description>
        </item>
        
        <item>
            <title>Поиск долгих запросов с помощью Python</title>
            <link>https://kostyanetsky.ru/notes/longest-queries-using-python</link>
            <guid isPermaLink="false">note-longest-queries-using-python</guid>
            <pubDate>Sun, 18 Jul 2021 17:23:55 +0700</pubDate>
            <description><p>Выложил <a href="https://github.com/vkostyanetsky/ScriptsFor1C/blob/master/Технологический журнал/LongestQueries.py" target="_blank">скрипт на Python</a> для поиска длительных запросов в ТЖ 1С. Накатал его в приступе отчаяния: никак не мог понять, почему мой <a href="https://github.com/vkostyanetsky/ScriptsFor1C/blob/master/Технологический журнал/LongestQueries.sh" target="_blank">верный баш</a> для одного из запросов выдаёт среднее время выполнения больше максимального.</p>
<p>Как выяснилось, проблема была в gawk. Для некоторых событий ТЖ эта утилита не могла определить длительность: пыталась преобразовать строку в число, фейлилась и… Нет, что вы! Конечно, не кидалась исключением! Просто невозмутимо считала эти строки за ноль и ехала дальше.</p>
<p>Патч, кстати, вышел ещё глупее проблемы: я просто <a href="https://github.com/vkostyanetsky/ScriptsFor1C/commit/946f271d6ea0c1e618b180cee11ae91ce4632c18" target="_blank">сделал</a> явное преобразование строки в число, и всё заработало как надо. Чем, блин, явное преобразование в мире gawk'а отличается от неявного? И, главное, почему?</p>
<p>Короче, цирк уехал, новый скрипт остался. Впрочем, он бережнее расходует память и процессор: в скрипте на баше для расчёта количества выполнений запроса, суммарного времени выполнения и максимального времени одного выполнения я использовал три коллекции, у каждой из которых ключом был текст запроса и его контекст. Соответственно, все три нужно было обновлять и держать в памяти.</p>
<p>Это вполне рабочая тактика, пока входящий поток не переваливает за сотни тысяч элементов: где-то тут мы начинаем терять гигабайты ОЗУ на хранении коллекций и прорву времени процессора на поиске в них. Новый скрипт попрямее: коллекция одна, но хранит всe данные по каждому запросу.</p></description>
        </item>
        
        <item>
            <title>Места лишения свободы</title>
            <link>https://kostyanetsky.ru/notes/places-of-imprisonment</link>
            <guid isPermaLink="false">note-places-of-imprisonment</guid>
            <pubDate>Mon, 23 Feb 2015 21:33:13 +0700</pubDate>
            <description><p>Нашел здорово оформленный <a href="https://kefiijrw.com/army/#intro" target="_blank">дневник</a> российского срочника, ныне — одного из дизайнеров <a href="https://artlebedev.ru" target="_blank">студии</a> Артемия Лебедева. Написано интересно и с юмором, читается — запоем.</p>
<p>С праздником всех причастных!</p></description>
        </item>
        
        <item>
            <title>Мультиязычность в Vue.js</title>
            <link>https://kostyanetsky.ru/notes/vue-i18n</link>
            <guid isPermaLink="false">note-vue-i18n</guid>
            <pubDate>Tue, 25 Jun 2019 14:29:28 +0700</pubDate>
            <description><p>Я веду этот сайт на русском языке, но есть и <a href="https://kostyanetsky.me" target="_blank">зеркало</a> на английском — туда я постепенно перевожу то, что написал здесь. Поддерживать два набора скриптов я не хочу, поэтому оба домена ссылаются на один и тот же сервер, который определяет, с какого домена пришел запрос — и выводит ответ на соответствующем языке.</p>
<p>Звучит просто, но на самом деле эта задача рождает довольно много дополнительных проблем, и одна из них — вывод интерфейса. Сначала я <s>по привычке</s> завел на клиенте два массива с фразами на разных языках, но быстро выкинул этот велосипед и прикрутил <a href="https://www.npmjs.com/package/vue-i18n" target="_blank">Vue I18n</a>.</p>
<p>На нижнем уровне это, правда, всё те же <a href="https://kazupon.github.io/vue-i18n/guide/formatting.html#named-formatting" target="_blank">два массива</a> с фразами (их нужно задать при инициализации), однако выгода здесь в другом. Этот плагин сам по себе закрывает еще две проблемы с генерацией интерфейса:</p>
<ol>
<li><a href="https://kazupon.github.io/vue-i18n/guide/pluralization.html" target="_blank">Склонение существительных</a>. Нужно, чтобы правильно выводить слово «страница» в <a href="https://kostyanetsky.ru//notes/tags/" target="_blank">статистике по тегам</a> — одна заметка, две заметки, пять заметок и так далее.</li>
<li><a href="https://kazupon.github.io/vue-i18n/guide/datetime.html" target="_blank">Вывод дат</a>. Например, дата под этой заметкой.</li>
</ol>
<p>Обе задачи, конечно, можно было закрыть на стороне сервера, силами PHP, но я счел это некрасивым решением. Сервер должен возвращать данные, клиент — строить интерфейс. Нечего их смешивать.</p></description>
        </item>
        
        <item>
            <title>Метаданные не найдены</title>
            <link>https://kostyanetsky.ru/notes/metadata-not-found</link>
            <guid isPermaLink="false">note-metadata-not-found</guid>
            <pubDate>Tue, 08 Jun 2021 17:12:05 +0700</pubDate>
            <description><p><img alt="Метаданные не найдены" src="https://kostyanetsky.ru/notes/metadata-not-found/error-ru.png"/></p>
<p>Думаю, с этой ошибкой мало кто сталкивался. Для этого, во-первых, нужно работать со встроенной в платформу историей данных, а она не больно-то популярна: кто-то привязан к БСП (она пока использует привычное всем версионирование на регистрах сведений), кому-то не нравится реализация — там и правда не всё гладко с точки зрения производительности.</p>
<p>Во-вторых, нужно сделать так: выключить историю данных для объекта метаданных, а потом грохнуть накопленные версии объектов <strong>до того</strong>, как новые изменения объекта перекочуют из буфера в основную таблицу.</p>
<p>В двух словах о том, как вообще работает история данных. По дефолту она выключена, и достаточно привилегированный пользователь может включить её для нужных ему объектов — констант, справочников, документов и так далее. После этого при изменении данных в этих объектах платформа будет фиксировать, что именно меняется. Делает она это в два этапа: сначала — относительно быстрая запись в промежуточный буфер (таблицу _DataHistoryQueue0); потом, при вызове метода ОбновитьИсторию(), информация мигрирует в основное хранилище версий (таблицу _DataHistoryVersions) и становится доступна в интерфейсе приложения.</p>
<p>Обновление истории можно делать сразу при записи, но для сокращения транзакции его обычно выносят в регламентное задание. В итоге миграция данных из буфера в основную таблицу происходит с некоторой периодичностью: например, раз в пять минут. Так вот, если между изменением данных объекта и обновлением истории данных выключить историю объекта и удалить его версии — метод ОбновитьИсторию() выкинет исключение: он попытается переместить изменения из буфера в основную таблицу, но не сможет привязать их к уже накопленным данным.</p>
<p>Для наглядности — <a href="https://gist.github.com/vkostyanetsky/ca766fe281425953e0e2bbfe12fc70e2" target="_blank">рабочий код</a>, воспроизводящий проблему для справочника Items на платформе 8.3.17.1989. Можете подставить любой другой объект, с которым работает история данных — разницы нет. </p>
<p><strong>Как избежать этой ошибки?</strong> Ну, очевидно: метод ОбновитьИсторию() нужно вызывать непосредственно перед тем, как отключать историю для объекта. Лучше всего делать это в период, когда пользователи с системой не работают: есть риск, что между обновлением истории и её выключением вклинятся чьи-то транзакции, которые спровоцируют ту же проблему. Для гарантии можно использовать монопольный режим.</p>
<p>Ещё в голову приходит исключительная блокировка на таблицу объекта, но документация не советует вызывать метод ОбновитьИсторию() внутри транзакций — так что тут я не уверен.</p>
<p><strong>Как исправить эту ошибку?</strong> Включите историю данных для проблемного объекта, обновите историю и выключите её обратно. Выйдите, так сказать, из класса и зайдите нормально.</p></description>
        </item>
        
    </channel>
</rss>