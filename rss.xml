<rss version="2.0">
    <channel>    
        <title>Влад Костянецкий</title>
        <description>Привет! Меня зовут Влад, я — разработчик приложений для бизнеса.</description>
        <language>ru</language>
        <link>https://kostyanetsky.ru</link>
        <lastBuildDate>Thu, 29 Nov 2018 19:22:56 +0700</lastBuildDate>
        
        <item>
            <title>Ссылка нового объекта</title>
            <link>https://kostyanetsky.ru/notes/set-new-object-ref</link>
            <guid isPermaLink="false">note-set-new-object-ref</guid>
            <pubDate>Thu, 29 Nov 2018 19:22:56 +0700</pubDate>
            <description><p>Уникальный идентификатор — удобный критерий при сопоставлении объектов в разных конфигурациях. Например, когда нужно передавать инвойсы из одной базы в другую. Как второй базе понять, загружался полученный инвойс или нет? Первое, что приходит в голову — просто выполнить поиск объекта по его UUID:</p>
<pre><code>ИнвойсЗагружен = Документы.Инвойс.ПолучитьСсылку(UUID).Пустая();
</code></pre>
<p>Однако иногда уникальный идентификатор используют для связи объектов в одной конфигурации. Например, если условия задачи мешают добавить обычный ссылочный реквизит и мы не можем в документе А прямо сослаться на документ Б. Или, скажем, если мы создаем элемент справочника на основании документа и хотим иметь между ними прямую связь — присваивая элементу справочника ссылку, полученную по уникальному идентификатору документа. Платформа гарантирует уникальность идентификатора в пределах таблицы, так что такие трюки вполне безопасны.</p>
<p>Я это к чему. Метод УстановитьСсылкуНового() в коде нужно использовать с осторожностью! Проверяйте, что ссылка ещё не установлена до выполнения вашего кода:</p>
<pre><code>СсылкаЗадана = ПолучитьСсылкуНового().Пустая();
</code></pre>
<p>Если ссылка задана, то это надо как-то обработать — либо не заменять её вашей (если логика задачи позволяет), либо создать исключение. Иначе может возникнуть нарушение связности данных, которое будет непросто расследовать — да и вообще заметить.</p>
<p>Ну и, конечно, эта штука работает в обе стороны — я имею в виду, что установленную вами ссылку тоже может потереть какой-нибудь посторонний код (например, обработчик события объекта или подписка на него). Это надежно решается только тестированием.</p></description>
        </item>
        
        <item>
            <title>Конкатенация строк</title>
            <link>https://kostyanetsky.ru/notes/string-concatenation</link>
            <guid isPermaLink="false">note-string-concatenation</guid>
            <pubDate>Sun, 27 Jan 2019 11:52:24 +0700</pubDate>
            <description><p>Как и многие другие компании, мы даем соискателям тестовое задание. Оно намеренно несложное и нужно больше для того, чтобы посмотреть — насколько кандидат понимает платформу? Как аккуратно работает с объектами конфигурации и её кодом?</p>
<p>Одна из множества мелких штук, которые там проверяются — это формирование длинного сообщения для пользователя, включающее множество параметров. Разработчик может делать это через СтрШаблон() или СтрСоединить(), а может — через простую конкатенацию (соединение) строк. Если кандидат использует последний вариант — это считается небольшим минусом: для пользователя результат будет тот же, но вот понять из кода, как он будет примерно выглядеть — заметно сложнее.</p>
<p>Однако тут есть другой аспект. В первой половине прошлого года «Рарус» опубликовал <a href="http://techlab.rarus.ru/upload/iblock/2/185/Beeline-obespechenie-bespereboynoy-raboti.pdf" target="_blank">отчет</a> о работах, проделанных для «Билайна». Там много любопытного, но среди прочего есть совершенно оглушительный пункт: за счет отказа от соединения строк разработчики добились 40% снижения нагрузки на процессоры! От двух дополнительных серверов после этих изменений вообще отказались, так как они стали не нужны.</p>
<p>Проблема возникала из-за того, чтобы рабочие процессы тратили слишком много времени на распределение памяти для склейки строк. В случае однократного соединения заметной нагрузки не возникает, однако когда мы, например, собираем большой запрос в цикле и делаем это многократно — нагрузка растет лавинообразно. Конкатенацию в таких случаях использовать нельзя, правильный вариант — все те же СтрШаблон() или СтрСоединить(). На старых версиях платформы, где этих методов нет, можно применять объект текстового документа — добавлять в него строки, а потом получать текст.</p></description>
        </item>
        
        <item>
            <title>ЭтотОбъект.ЭтотОбъект</title>
            <link>https://kostyanetsky.ru/notes/thisobject-thisobject</link>
            <guid isPermaLink="false">note-thisobject-thisobject</guid>
            <pubDate>Fri, 24 Jul 2020 10:47:34 +0700</pubDate>
            <description><p><a href="https://twitter.com/webholt/status/923830370822389760" target="_blank"><img alt="Твит" src="https://kostyanetsky.ru/notes/thisobject-thisobject/snap-tweet-webholt-923830370822389760.png"/></a></p>
<p>Обожаю JavaScript! Каждый раз, когда у меня сгорает задница от какой-нибудь странной дичи в любимой платформе, я просто открываю любой тред про будни веб-девелоперов и быстро, очень быстро успокаиваюсь.</p>
<p>Впрочем, похожие трюки можно повторить в 1С. Например, JavaScript понимает window.window.window.location, а платформа — <a href="https://kostyanetsky.ru/notes/thisobject-thisobject/thisobject-thisobject.png" target="_blank">вот это</a> :-)</p></description>
        </item>
        
        <item>
            <title>Запросы и ожидания на блокировках</title>
            <link>https://kostyanetsky.ru/notes/queries-and-lock-waits</link>
            <guid isPermaLink="false">note-queries-and-lock-waits</guid>
            <pubDate>Mon, 19 Oct 2020 06:23:06 +0700</pubDate>
            <description><p>Набросал ещё два скрипта для анализа ТЖ: <a href="https://github.com/vkostyanetsky/ScriptsFor1C/blob/master/Технологический%20журнал/LongestQueries.sh" target="_blank">первый</a> строит топ тяжелых запросов к MS SQL, <a href="https://github.com/vkostyanetsky/ScriptsFor1C/blob/master/Технологический%20журнал/LongestLockWaitsByRegions.sh" target="_blank">второй</a> — топ длительных ожиданий на блокировках.</p>
<p>Тяжелые запросы определяются по продолжительности событий DBMSSQL. То есть, чем дольше выполнялся запрос — тем вероятнее, что в процессе он слопал кучу ресурсов. Обычно это так и есть, хотя для нормальной диагностики нужно смотреть трассировку.</p>
<p>Ожидания на блокировках тоже считаются по продолжительности. При этом скрипт проверяет, что у события TLOCK заполнено свойство WaitConnections — то есть платформа действительно ждала возможности установить блокировку, а не просто потратила какое-то время на её установку.</p></description>
        </item>
        
        <item>
            <title>План на поездку</title>
            <link>https://kostyanetsky.ru/notes/trip-plan</link>
            <guid isPermaLink="false">note-trip-plan</guid>
            <pubDate>Mon, 25 Mar 2013 08:42:02 +0700</pubDate>
            <description><p>Укатил в Екатеринбург на конференцию по софту для автовокзалов. Наказал Кэт слушаться дочку, а дочке — слушаться Кэт. Подозреваю, их ждет веселая неделя.</p>
<p><a href="https://kostyanetsky.ru/notes/trip-plan/plan.jpg" target="_blank"><img alt="План" src="https://kostyanetsky.ru/notes/trip-plan/plan-thumbnail.jpg"/></a></p>
<p>Вернусь в субботу. Скучайте.</p></description>
        </item>
        
        <item>
            <title>Авибус</title>
            <link>https://kostyanetsky.ru/notes/avibus-pro</link>
            <guid isPermaLink="false">note-avibus-pro</guid>
            <pubDate>Mon, 16 Feb 2015 21:22:55 +0700</pubDate>
            <description><p>Конфигурация для 1С:Предприятия, которую мы пару лет назад внедряли на кузбасских автовокзалах, обзавелась симпатичной <a href="http://avibus.pro/" target="_blank">обложкой</a>.</p>
<p>По-моему, очень круто! В том числе и тем, что это один из проектов, постепенно разрушающих заплесневелый, но невероятно устойчивый даже среди айтишников миф про 1С — типа, это скучный тормозной софт для бухгалтеров, а настоящие пацаны пишут только на C++ (Java, Javascript, подчеркните, впишите) и тому подобные бредни.</p></description>
        </item>
        
        <item>
            <title>Kona</title>
            <link>https://kostyanetsky.ru/notes/kona</link>
            <guid isPermaLink="false">note-kona</guid>
            <pubDate>Tue, 29 May 2018 17:56:13 +0700</pubDate>
            <description><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/M6KizfrASRY" width="560"></iframe>
<p>У игры есть сильные стороны, которые честно старались удержать мое внимание: тут есть где погулять, что почитать, о чем подумать и на что посмотреть. Если вы цените это в играх — возможно, вам понравится. От прогулок и размышлений почти ничего не отвлекает — умереть от чего бы то ни было тут довольно сложно. Ровно как и заблудиться — у главного героя есть карта и автомобиль, а позже можно раздобыть ещё и снегоход.</p>
<p>Но сюжет меня здорово расстроил. Интригующая детективная завязка, не успев обрасти деталями, тает в воздухе и уступает место откровенной мистике. Всё бы ничего, но вместе с этим исчезает всякая интрига — зачем искать улики, строить догадки, вообще о чём-то волноваться? Необъяснимые видения из ниоткуда расскажут и покажут всё, что и как тут было, и вот ты уже невольно заражаешься меланхоличным отношением героя к паранормальщине вокруг.</p>
<p>При этом мистическая сторона сюжета сама по себе зияет здоровенными дырами. Да, картина трагедии ближе к концу становится более или менее понятна — но даже последнее, самое полное видение само по себе рождает целую кучу вопросов, на которые никто не трудится отвечать. Сюжет в этой игре вообще здорово напоминает её же карту — выглядит цельным, но по факту доступна от силы половина, а остальное скомкано под отчетливо читаемое «ну, потому что магия, магия такая, понимаете?».</p>
<p>Нет, блин, не понимаю.</p></description>
        </item>
        
        <item>
            <title>Неудачная охота</title>
            <link>https://kostyanetsky.ru/notes/failed-hunt</link>
            <guid isPermaLink="false">note-failed-hunt</guid>
            <pubDate>Thu, 21 Feb 2019 16:42:32 +0700</pubDate>
            <description><p>При обновлении платформы до 8.13.12.1790 наткнулись на плавающий баг при переключении текущей страницы элемента на сервере. Конкретно на сервере оно срабатывает, но как только управление возвращается на клиент — текущей страницей становится та, что была до изменения. При этом ещё и происходит событие изменения текущей страницы (как будто пользователь сменил её вручную).</p>
<p>Неприятно, но, в общем, ничего страшного — запатчили баг, описали и зарепортили в 1С. Там пока <a href="https://bugboard.v8.1c.ru/error/000050675.html" target="_blank">думают</a>. Но я, внезапно, даже как-то расстроен — когда расследуешь такие штуки, они всегда выглядят немного загадочно и кажется, что ты вот-вот найдешь что-то интересное! Например, новый аспект работы платформы или что-то вроде этого.</p>
<p>И вот, наконец, ты смотришь на проблему под правильным углом, а она — обычный жук. Возможно, полосатый или в крапинку, но жук как жук — сидит себе, шевелит усами. И ты такой: блин, это что — и есть моя добыча? :-)</p></description>
        </item>
        
        <item>
            <title>Расчет количества исключений по ТЖ</title>
            <link>https://kostyanetsky.ru/notes/excp-number-by-minutes</link>
            <guid isPermaLink="false">note-excp-number-by-minutes</guid>
            <pubDate>Sat, 24 Oct 2020 12:00:12 +0700</pubDate>
            <description><p>Ещё <a href="https://github.com/vkostyanetsky/ScriptsFor1C/blob/master/Технологический%20журнал/ExceptionsNumberByMinutes.sh" target="_blank">скрипт</a>. Считает количество исключений в минуту и строит топ, по которому видно распределение. Можно быстро оценить периоды, когда программы сбоили особенно яростно.</p>
<p>По ходу дела столкнулся в двумя любопытными проблемами, которые меня порядком сбили с толку. Во-первых, я почему-то был уверен, что uniq -c группирует строки вне зависимости от того, где в потоке данных они встречаются. Рассмотрим пример:</p>
<pre><code>банан
банан
груша
банан
</code></pre>
<p>Я думал, что если отдать эти данные uniq -c, то она сгруппирует одинаковые строки, посчитает количество повторений и выдаст примерно такое:</p>
<pre><code>3 банан
1 груша
</code></pre>
<p>Но на деле получилось так:</p>
<pre><code>2 банан
1 груша
1 банан
</code></pre>
<p>Вывод: утилита uniq ожидает, что повторяющиеся строки идут одна за другой. Если строка отличается от предыдущей — она начинает считать счетчик совпадений для неё с нуля. То есть, чтобы получить тот результат, на который я рассчитывал — нужно сначала отсортировать данные, и только потом передавать их в uniq.</p>
<p>Второй проблемой стала утилита sed. С помощью неё я пытался удалить из потока данных всё, кроме часов и минут (текст попытки на 12-й строке скрипта). Однако часть событий упорно не попадали под регулярку несмотря на то, что визуально никак не отличались. Я промаялся кучу времени и здорово разозлился, но потом вспомнил про существование <a href="https://ru.wikipedia.org/wiki/Маркер_последовательности_байтов" target="_blank">BOM</a>. Вычистил их и дальше все пошло как по маслу.</p>
<p>BOM используется во всех файлах ТЖ (в этом можно убедиться, например, с помощью <a href="https://github.com/vkostyanetsky/ScriptsFor1C/blob/master/Технологический%20журнал/LogFilesWithoutBOM.sh" target="_blank">скрипта</a>). То есть каждый лог начинается с особых символов, которых невооруженным глазом не увидеть и которые могут помешать обработать первую строку файла (так как эти самые символы не будут попадать под условие регулярного выражения).</p>
<p>Вывод: проще всего удалять BOM по умолчанию, не оценивая рисков для каждой конкретной задачи. Да, иногда это будет лишним (например, решению задачи по тексту выше через grep BOM никак не мешает). Но я не люблю сюрпризы. Кроме того, несколько тактов процессора на простую замену — явно выгоднее, чем эквивалент в сгоревших нервных клетках и потерянном времени.</p></description>
        </item>
        
        <item>
            <title>Выбор</title>
            <link>https://kostyanetsky.ru/notes/my-school</link>
            <guid isPermaLink="false">note-my-school</guid>
            <pubDate>Thu, 05 Jun 2014 22:02:34 +0700</pubDate>
            <description><p>Дочка усердно расчесывает ногу. Говорю ей: эй, не чеши, болеть будет. Она на меня серьезно так смотрит и отвечает: пап, это мой выбор, чесать или не чесать.</p>
<p>Не нашел, что возразить.</p>
<p><img alt="Моя школа!" src="https://kostyanetsky.ru/notes/my-school/bender.jpg"/></p></description>
        </item>
        
    </channel>
</rss>