<rss version="2.0">
    <channel>    
        <title>Влад Костянецкий</title>
        <description>Привет! Меня зовут Влад, я — разработчик приложений для бизнеса.</description>
        <language>ru</language>
        <link>https://kostyanetsky.ru</link>
        <lastBuildDate>Sun, 17 Feb 2019 11:55:37 +0700</lastBuildDate>
        
        <item>
            <title>Большие таблицы значений</title>
            <link>https://kostyanetsky.ru/notes/big-value-tables</link>
            <guid isPermaLink="false">note-big-value-tables</guid>
            <pubDate>Sun, 17 Feb 2019 11:55:37 +0700</pubDate>
            <description><p>Пока писал про <a href="https://kostyanetsky.ru//notes/find-rows-at-client/" target="_blank">поиск строк</a> на клиенте, вспомнил ещё один нюанс, связанный с данными на управляемых формах — тоже про передачу между клиентом и сервером.</p>
<p>Допустим, нам по условиям задачи нужно оперировать сравнительно большими (тысячи строк) таблицами значений. Это могут быть данные, которые в общем случае не нужно показывать пользователю: например, параметры расчета цен, информация о продажах и закупках, что-то ещё. Логично создать такие таблицы в виде атрибутов формы — хотя бы потому, что можно использовать удобный конструктор.</p>
<p>Но когда платформа решит передать такую таблицу на сервер, начнутся проблемы. Дело в том, что передавать она будет не простой и компактный объект ТаблицаЗначений, а весьма насыщенный ДанныеФормыКоллекция. Разница колоссальна — на одном из наших проектов траты на такой обмен данными составляли порядка 40% от всего времени работы ключевой операции.</p>
<p>Решение достаточно очевидно — не использовать атрибуты формы вообще. Вместо этого создавать таблицы значений с помощью кода (например, в обработчике ПриСозданииНаСервере), закидывать их во временное хранилище, а в атрибутах формы хранить только адреса хранилища. Таким образом при необходимости поработать с таблицей на сервер отправляется только строка с адресом, и расходы на сериализацию и обмен данными начинают стремиться к нулю. На сервере извлекаем таблицу, читаем данные, изменяем их, если нужно, и сохраняем обратно во временное хранилище — по тому же адресу.</p></description>
        </item>
        
        <item>
            <title>Запись видео</title>
            <link>https://kostyanetsky.ru/notes/video-recording</link>
            <guid isPermaLink="false">note-video-recording</guid>
            <pubDate>Fri, 03 Apr 2020 05:17:06 +0700</pubDate>
            <description><p>Я работаю удалённо и с коллегами общаюсь через Zoom и Slack. В основном в чатах, но многие темы по-прежнему проще обсудить голосом. И вот тут-то возникают проблемы: приходится забыть про индексацию и поиск по сообщениям, а главное — нет никакого архива разговоров. Иногда очень нужно вспомнить: кто говорил? Что конкретно? Когда?</p>
<p>Zoom и Slack сами по себе эту проблему не решают. Первый умеет записывать только те конференции, которые организуешь ты или которые тебе разрешили писать (короче, далеко не все), а второй писать видео не умеет вообще.</p>
<h2>Решение проблемы</h2>
<p>Я закрыл вопрос какое-то время назад, поставив себе <a href="https://obsproject.com" target="_blank">OBS Studio</a> — популярный среди стримеров софт для записи экрана. С записью конференций он прекрасно справляется. Настройка минимальная: пишем весь экран, звук с микрофона и все звуки, которые воспроизводятся. В микшере по результатам тестовых записей можно натыкать фильтры — усиление, шумоподавление и так далее.</p>
<p><img alt="Настройка OBS Studio" src="https://kostyanetsky.ru/notes/video-recording/video-recording.png"/></p>
<p>В настройках нужно указать папку, куда будут складываться записанные видео (Вывод → Запись → Путь записи). Поскольку мы пишем звонки и файлов будет много, лучше сразу разложить их в папки по дням — для этого идем в расширенные настройки и в поле «Формат имени файла» указываем нечто вроде %CCYY-%MM-%DD/%hh-%mm-%ss.</p>
<h2>Быстрое управление записью</h2>
<p>Конечно, лезть в OBS при каждом звонке неудобно, но у неё есть куча хоткеев — можно прожимать какие-нибудь заковыристые комбинации в начале и в конце разговора. Однако со мной это не сработало — придуманные хоткеи почему-то постоянно вылетали из головы. Даже стикеры не помогали. </p>
<p>Поначалу я здорово разозлился, но потом понял: раз не получается запомнить хоткей — надо его выкинуть. Начинать запись нажатием одной кнопки, заканчивать нажатием на другую.</p>
<p>С оборудованием всё было просто: у меня эргономичная <a href="https://www.microsoft.com/accessories/ru-ru/products/keyboards/natural-ergonomic-keyboard-4000/b2m-00020" target="_blank">клавиатура</a> от Microsoft, программируемых кнопок на ней — вагон. Хуже с софтом: OBS Studio понимает некоторые <a href="https://github.com/obsproject/obs-studio/wiki/Launch-Parameters" target="_blank">параметры</a> запуска, но список откровенно бедноват — даже остановки записи нет. Хотелось бы побольше.</p>
<p>В итоге решил задачу через плагин к OBS Studio, который дает порулить запущенным экземпляром программы. Он придуман для удаленного управления записью (например, со смартфона), но никто не мешает использовать его локально.</p>
<p>Схема получилась такая:</p>
<ol>
<li>Ставим OBS Studio и плагин <a href="https://obsproject.com/forum/resources/obs-websocket-remote-control-of-obs-studio-made-easy.466/" target="_blank">obs-websocket</a> к ней. Снимаем галку «Enable System Tray Alerts» в настройках (Tools → WebSockets Server Settings), не то программа примется сообщать о каждом чихе.</li>
<li>Кладем куда-нибудь <a href="https://obsproject.com/forum/resources/command-line-tool-for-obs-websocket-plugin-windows.615/" target="_blank">утилиту</a>, с помощью которой этим плагином можно рулить из командной строки. </li>
<li>Вешаем на одну кнопку OBSCommand.exe /startrecording, а на другую — OBSCommand.exe /stoprecording.</li>
<li>Готово, вы великолепны!</li>
</ol>
<p>При вызове на долю секунду видно консоль (OBSCommand запускается, связывается с obs-websocket и ждет ответа). Сначала хотел как-нибудь скрыть это окно, но, поразмыслив, передумал — если OBS Studio не будет запущен или возникнет какая-то проблема, консоль не закроется и я хотя бы узнаю, что запись не началась.</p></description>
        </item>
        
        <item>
            <title>Сикока сикока?</title>
            <link>https://kostyanetsky.ru/notes/so-much</link>
            <guid isPermaLink="false">note-so-much</guid>
            <pubDate>Wed, 05 Jun 2019 20:27:34 +0700</pubDate>
            <description><p>Этот сайт почти полностью написан на PHP. JavaScript на клиенте используется ситуативно — редирект сделать, картинку показать и так далее.</p>
<p>Для личного ресурса ничего сложнее и не нужно, но некоторое время назад мне приспичило слегка освежить свои навыки веб-разработки. В качестве платформы для эксперимента я выбрал Vue.js — популярный, быстрый и не слишком сложный фреймворк.</p>
<p>Я, собственно, к чему это всё пишу. Развернул тут Node.js, Vue CLI, создал первый проект — и чуть не поседел. Триста мегабайт джаваскрипта прямо со старта?! Серьёзно?!</p></description>
        </item>
        
        <item>
            <title>Метод с сюрпризом</title>
            <link>https://kostyanetsky.ru/notes/method-with-surprise</link>
            <guid isPermaLink="false">note-method-with-surprise</guid>
            <pubDate>Mon, 27 Jul 2020 07:38:49 +0700</pubDate>
            <description><p>Пару недель назад столкнулся с досадным багом. Контекст — примитивнее не придумаешь: нужно найти документ по номеру. Если сделать так — документ будет найден:</p>
<pre><code>SELECT Ref FROM Document.Invoice WHERE Number = &amp;Number
</code></pre>
<p>А вот так — фигушки:</p>
<pre><code>Documents.Invoice.FindByNumber(Number)
</code></pre>
<p>Сначала я даже слегка завис, но потом полез в документацию и, конечно, нашел ответ. У метода FindByNumber() есть второй параметр, IntervalDate, нужный для поиска периодического документа. С помощью него можно сузить поиск до конкретного периода; например, если периодичность нумерации — год и мы присвоим параметру значение 01-05-2020, то поиск пойдет в периоде от 01-01-2020 до 31-12-2020. А нумерация у документа Invoice и правда периодическая — в пределах года.</p>
<p>Так в чем проблема? Дело в том, что за уклончивым «the parameter is used for documents with periodic numbering» на самом деле скрывается железное правило: параметр <strong>нельзя</strong> опускать для периодических документов.</p>
<p>Чтобы убедиться в этом, посмотрим, какой SQL выполняется на стороне СУБД. Делаем обычный запрос — никаких сюрпризов. P1 здесь — разделитель, P2 — номер документа:</p>
<pre><code>SELECT
    T1._IDRRef 
FROM
    dbo._Document283 T1
WHERE
    ((T1._Fld704 = @P1))
    AND ((T1._Number = @P2))
</code></pre>
<p>А вот если выполнить FindByNumber(), то в запросе появится третий параметр со значением 2001-12-31 23:59:59 — ну да, «конец первого года с начала времён»:</p>
<pre><code>SELECT
    T1._IDRRef
FROM
    dbo._Document283 T1
WHERE
    ((T1._Fld704 = @P1))
    AND
    (
        T1._Number = @P2
        AND T1._Date_Time &lt;= @P3
    )
</code></pre>
<p>Конечно, такой запрос не находит нужный документ. Он вообще ничего не найдет  в любой реальной базе — никогда, ни при каких обстоятельствах.</p>
<p>Подведем итог. Как решить проблему — понятно: указываем IntervalDate или, если даты нет, подключаем ЗначениеРеквизитаОбъекта() БСП или его аналог. Но, честное слово, со стороны платформы, было бы куда адекватнее выбрасывать исключение, если FindByNumber() вызван без IntervalDate, а у документа включена периодичность — чем вот так, тихой сапой, делать гарантированно бессмысленные запросы.</p></description>
        </item>
        
        <item>
            <title>Девятый вал</title>
            <link>https://kostyanetsky.ru/notes/ninth-wave</link>
            <guid isPermaLink="false">note-ninth-wave</guid>
            <pubDate>Mon, 09 Mar 2020 11:55:06 +0700</pubDate>
            <description><p>Покупал вчера утром подарки своим женщинам. Пока флорист собирала букеты, болтал с ней ни о чем и случайно перехватил взгляд в сторону нарастающей толпы покупателей — спокойный такой, с отчетливо читающейся обреченностью. Так моряки, наверное, смотрят на вздымающуюся волну, которая вот-вот похоронит их шлюпку :-)</p>
<p>Люди вне цветочной индустрии иногда хмыкают — мол, восьмое марта это такой волшебный праздник для цветочников, которые делают целое состояние за десять часов. Касса в эти дни и правда собирается приличная — только вот у любого, кто когда-либо работал в этой сфере, восьмое (и пара дней до него, кстати) чаще ассоциируется с чудовищной нагрузкой на силы, нервы и здоровье.</p>
<p>Я, можно сказать, ещё дешево отделался: всего-то разворачивал и обслуживал айти в местной сети цветочных магазинов (кстати, <a href="http://rosetta.florist/" target="_blank">рекомендую</a> бывших коллег!). И всё равно запах цветов ещё долго вызывал у меня вьетнамский синдром.</p></description>
        </item>
        
        <item>
            <title>Новый Фастаймер</title>
            <link>https://kostyanetsky.ru/notes/fastimer-1-3-1</link>
            <guid isPermaLink="false">note-fastimer-1-3-1</guid>
            <pubDate>Wed, 23 Aug 2023 20:58:32 +0700</pubDate>
            <description><p>Выпустил новую <a href="https://github.com/vkostyanetsky/Fastimer/releases/tag/v1.3.1" target="_blank">версию</a> своего консольного таймера для <a href="https://ru.wikipedia.org/wiki/Периодическое_голодание" target="_blank">интервального голодания</a>. Сам таймер я написал где-то год назад, когда меня в очередной раз расстроило приложение <a href="https://www.zerolongevity.com/" target="_blank">Zero</a> для Android: в нём не работала какая-то совсем примитивная функция вроде просмотра конкретного интервала.</p>
<p>Основное отличие 1.3.1 от 1.2.3 — выпилил к черту консольное меню в пользу старых-добрых аргументов и опций. Концепция меню выглядит удобной, пока фич у приложения мало, но как только их число растёт — необходимость протыкивать каждое действие начинает напрягать.</p></description>
        </item>
        
        <item>
            <title>Не скомпилированный код</title>
            <link>https://kostyanetsky.ru/notes/incompiled-code</link>
            <guid isPermaLink="false">note-incompiled-code</guid>
            <pubDate>Sun, 27 Jan 2019 10:09:59 +0700</pubDate>
            <description><p>Не очевидная штука: абстрактная внешняя обработка работает заметно медленнее точно такой же, но встроенной в конфигурацию или её расширение. Причина — её код нужно заново компилировать для каждого пользователя при каждом запуске (тогда как код встроенных обработок компилируется один раз и для всех). Судя по <a href="https://kb.1c.ru/articleView.jsp?id=111" target="_blank">статье</a> в базе знаний 1С, для платформы 8.3.10 это было прямо катастрофа, но и пятидесятипроцентный рост нагрузки на процессор в 8.3.13 — тоже, в общем, ничего хорошего.</p>
<p>Другой подход с тем же эффектом — это хранение кода внутри базы (в реквизитах служебных справочников, например). Каждый раз, когда такой код нужно запустить, он извлекается из БД и компилируется. Например, у нас в <a href="https://firstbit.ae/products/erp-dubai/financial_management/" target="_blank">конфигурации</a> можно создавать регламентные задания без изменения метаданных — просто добавляем элемент специального справочника, загружаем в него код и настраиваем расписание работы.</p>
<p>Это относительно нормально — регламентные задания обычно выполняются не слишком часто и компиляция, скорее всего, не создаст сколько-либо заметной нагрузки на процессор. Однако этот же справочник может использоваться и для автоматического вызова какого-либо кода после произвольного события: например, после сохранения документа определенного типа. В таких случаях, если есть понимание, что код будет выполняться постоянно и множеством пользователей — стоит перенести логику в метод общего модуля из расширения, а в самом хранимом коде оставить только вызов этой логики.</p>
<p>А ещё можно вообще отказаться от хранения кода и сделать весь механизм в виде расширения. Возможно, решение будет менее гибким, но все же это лучше, чем потом медитировать над низким APDEX'ом.</p></description>
        </item>
        
        <item>
            <title>River City Girls</title>
            <link>https://kostyanetsky.ru/notes/river-city-girls</link>
            <guid isPermaLink="false">note-river-city-girls</guid>
            <pubDate>Mon, 30 Sep 2019 07:50:22 +0700</pubDate>
            <description><p>Прошли на пару с мелкой River City Girls (недавно вышедший beat 'em up; это такой жанр игр, где нужно навалять всем, кто тебе не нравится).</p>
<p>На <a href="https://kostyanetsky.ru/notes/river-city-girls/ru.jpg" target="_blank">фоточке</a> я наблюдаю  за десятилетней Лисой, которая в этот момент уверенно разбрасывает толпу японских мордоворотов.</p></description>
        </item>
        
        <item>
            <title>Draugen</title>
            <link>https://kostyanetsky.ru/notes/draugen</link>
            <guid isPermaLink="false">note-draugen</guid>
            <pubDate>Mon, 10 Jun 2019 18:03:04 +0700</pubDate>
            <description><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/ziNZqEw0Adg" width="560"></iframe>
<p>Сравнительно короткая, но по-своему яркая история. Проиграть тут нельзя, особого выбора (кроме вариантов реплик) нет. Но то, как тут всё звучит и выглядит, то, как здорово прописаны персонажи — удивляет и трогает. Даже если угадываешь повороты сюжета до того, как с ними столкнешься.</p>
<p>В целом игра напомнила то ли Firewatch, то ли The Vanishing of Ethan Carter. Сюжет, на мой вкус, мог быть немного длиннее и заметно драматичнее, но мне всё равно чертовски понравилось, как всё закончилось. Эмоции от финала можно выразить — <strong>осторожно, спойлер</strong> — <a href="https://kostyanetsky.ru/notes/draugen/the-main-thing-is.jpg" target="_blank">вот этой картинкой</a> :-)</p></description>
        </item>
        
        <item>
            <title>Совершенно несчастный</title>
            <link>https://kostyanetsky.ru/notes/unhappy</link>
            <guid isPermaLink="false">note-unhappy</guid>
            <pubDate>Fri, 24 Mar 2017 11:35:49 +0700</pubDate>
            <description><p>Наткнулся на «<a href="https://theoatmeal.com/comics/unhappy" target="_blank">How to be Perfectly Unhappy</a>» — комикс Мэтью Инмана о счастье, несчастье и том, что вообще стоит за этими словами.</p>
<p>У мужика отличное чувство юмора — собственно, он и известен как автор юмористических комиксов «The Oatmeal». Когда такие люди говорят о серьёзном, часто получается вот так: забавно, мудро и как-то откровенно, что ли.</p></description>
        </item>
        
    </channel>
</rss>